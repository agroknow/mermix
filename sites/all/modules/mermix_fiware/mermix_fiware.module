<?php

function mermix_fiware_init() {
    drupal_add_js('jQuery(document).ready(function () { if(!jQuery.cookie("geolocation")) {geolocation();} });', array('type' => 'inline', 'scope' => 'footer', 'weight' => 5));
}

function mermix_fiware_menu() {
    $items['admin/config/mermixfiware'] = array(
	'title' => 'Mermix fiware configuration',
	'description' => 'Set options for mermix fiware module.',
	'position' => 'right',
	'weight' => -5,
	'page callback' => 'system_admin_menu_block_page',
	'access arguments' => array('administer site configuration'),
	'file' => 'system.admin.inc',
	'file path' => drupal_get_path('module', 'system'),
    );
    $items['admin/config/mermixfiware/settings'] = array(
	'title' => 'Mermix fiware configuration',
	'description' => 'Set options for mermix fiware module.',
	'page callback' => 'drupal_get_form',
	'page arguments' => array('mermix_fiware_admin_settings'),
	'access arguments' => array('administer site configuration'),
	'type' => MENU_NORMAL_ITEM,
	'file' => 'mermix_fiware.admin.inc',
    );
    $items['tracked-data'] = array(
	'title' => 'tracked data',
	'page callback' => 'mermix_fiware_tracked',
	'access callback' => 'user_access',
	'access arguments' => 'administer nodes',
	'type' => MENU_CALLBACK,
    );

    $items['cep-receiver'] = array(
	'title' => 'Cep receiver',
	'page callback' => 'mermix_cep_process',
	'access callback' => TRUE,
	'type' => MENU_CALLBACK,
    );

    return $items;
}

/**
 * Implements hook_variable_info().
 */
function mermix_fiware_variable_info($options) {
    $variables['mermix_fiware_notify_msg_subj'] = array(
    'title' => t('Fiware cep Notification message subject'),
    'description' => t('Notification message subject'),
    'localize' => TRUE,
  );
    $variables['mermix_fiware_notify_msg_body'] = array(
    'title' => t('Fiware cep Notification message body'),
    'description' => t('Notification message body'),
    'localize' => TRUE,
  );
    return $variables;
}

/** 
 * Introduce a bulk operation
 * https://www.drupal.org/node/2052067
 * Implements hook_action_info
 */
function mermix_fiware_action_info() {
  return array(
    'mermix_fiware_cep_unotified' => array(
      'type' => 'user',
      'label' => t('Send cep UNotified event'),
      'configurable' => FALSE,
      'vbo_configurable' => FALSE,
      'triggers' => array('any'),
    ),
  );
}

/** 
 * The bulk operation action
 */
function mermix_fiware_cep_unotified(&$user, $context) {
  _mermix_fiware_push_event('U' . $user->uid);
}

function mermix_cep_process() {
    /*
     * First post all user ids as events.
     * then when a user is going to receive a mail post his id again
      Cep post
      {"Certainty":"0.0","Cost":"0.0","Name":"SendNotification","EventSource":"","OccurrenceTime":"26\/02\/2016-04:28:11","machineId1":"109","Annotation":"","Duration":"0.0","userId":"U1","machineId":"109","EventId":"9c230a7a-6eaa-4e38-8691-b9ba24fadd2c","DetectionTime":"26\/02\/2016-04:28:11"}
     */
    //Handle the incoming post
    $payload = file_get_contents('php://input');
    if (empty($payload)) {
	drupal_json_output(array('status' => 'error', 'message' => t('No payload sent')));
	drupal_exit();
    }
    $event_data = json_decode($payload, true);
    $userid = substr($event_data['userId'],1);
    $machineid = $event_data['machineId'];
    $userObj = user_load($userid);
    $log = (int) variable_get('mermix_fiware_notifs_enabled', 0);
    
    if($log > 0) {
    //Send email
    _mermix_fiware_send_notification($userObj, $machineid, $log);
    }
    //Post event to Cep
    _mermix_fiware_push_event($event_data['userId']);
}

function _mermix_fiware_push_event($id) {
    $data = array('Name' => 'UNotified', 'val' => $id);
    
    $url = variable_get('cep_endpoint') . '/ProtonOnWebServer/rest/events';
    
    	drupal_http_request($url, array(
	    'method' => 'POST',
	    'data' => json_encode($data),
	    'max_redirects' => 0,
	    'headers' => array('Content-Type' => 'application/json', 'Accept' => 'application/json'))
	);
	watchdog('mermix_fiware', 'Sent event to @url with data : @data', array('@url' => $url, '@data' => json_encode($data)), WATCHDOG_INFO);
	//return json_decode($response->data);
}

function _mermix_fiware_send_notification($user, $machineid, $log) {
    if($log >= 2) {
    $machine = node_load($machineid);
    $variables = array(
	'@user-id' => $user->uid,
	'@user-name' => $user->name,
	'@user-first' => $user->field_first_name_['und'][0]['value'],
	'@user-last' => $user->field_last_name['und'][0]['value'],
	'@machine-id' => $machine->nid,
	'@machine-title' => $machine->title,
	'@machine-link' => url('node/'.$machineid,array('absolute' => TRUE)),
    );
    
    $language = user_preferred_language($user);
    $key = 'user-machine-notification';
    $subject = strtr(variable_get_value('mermix_fiware_notify_msg_subj',array('language' => $language)), $variables);
    $body = strtr(variable_get_value('mermix_fiware_notify_msg_body',array('language' => $language)), $variables);
    $params = array(
	'context' => array(
	    'subject' => $subject,
	    'body' => $body,
	),
	'plaintext' => strip_tags($body),
	'attachments' => '',
    );
    $from = NULL;
    
    drupal_mail('mimemail', $key, $user->mail, $language, $params, $from);
    }
    if($log != 3){
	watchdog('mermix_fiware', 'Sent email to user id @uid for machine @machineid', array('@uid' => $user->uid, '@machineid' => $machineid), WATCHDOG_INFO);
    }
    
}

function mermix_fiware_tracked() {
    module_load_include('inc', 'mermix_fiware');

    $object = mfGetAllEntities('User');
    $output = '';
    if (isset($object->errorCode->code) && $object->errorCode->code != "200") {
	//Something bad happens, maybe just not found.
	$output .= "<h1>Server responds with Code:" .
		$object->errorCode->code .
		"<h1> <h2>Message: " .
		$object->errorCode->reasonPhrase . "</h2>";
    } else {
	$contextResponses = $object->contextResponses; //Based on json response above using that a array will be returned
	//$info = $contextResponses->statusCode; //Some info about this request
	$info = $object->errorCode; //Some info about this request
	$output .= "<pre>";
	foreach ($contextResponses as $contextElement) {
	    $output .= "============================================" . PHP_EOL;
	    $output .= "Entity ID: " . $contextElement->contextElement->id . PHP_EOL;
	    $attributes = $contextElement->contextElement->attributes;
	    foreach ($attributes as $attr) {
		$output .= $attr->name;
		$output .= '<pre>' . var_export(json_decode(json_encode($attr->value), true), true) . '</pre>';
	    }
	    $output .= "============================================" . PHP_EOL;
	}
	$output .= "</pre>";
	return $output;
    }
}

function mermix_fiware_views_pre_view(&$view, &$display_id, &$args) {
    module_load_include('inc', 'mermix_fiware');
    global $user;
    global $_supercookie;

    $userid = '';

    if ($user->uid > 0) {
	$userid = 'U' . $user->uid;
    } else {
	$userid = 'A' . $_supercookie->scid;
    }
    //user dashboard history -- recently viewed view
    if ($view->name == 'machines_history' && $display_id == 'block') {

	$attributes = mfGetUserAttributesArray($userid);
	$machines = $attributes['machines'];
	if ($machines) {
	    arsort($machines);
	    $nodes = array_slice(array_keys($machines), 0, 10);
	    $args = array(implode(',', $nodes));
	}
    }
    //near you homepage block
    if ($view->name == 'machines_history' && $display_id == 'block_1') {

	$location = mfGetLocation($user);
	if ($location) {
	    $args = array(implode(',', $location));
	}
    }
    //front page content -- equipment view with proposed machines based on user preferences(most viewed categories)
    if ($view->name == 'equipment') {

	$attributes = mfGetUserAttributesArray($userid);
	$categories = $attributes['categories'];
	if ($categories && count($categories) >= 4) {
	    arsort($categories);
	    $categories = array_slice(array_keys($categories), 0, 4);
	    $args = array(implode(',', $categories));
	}
    }
}

function mermix_fiware_views_pre_render(&$view) {
    module_load_include('inc', 'mermix_fiware');
    global $user;
    global $_supercookie;

    $userid = '';
    $location = array();

    if ($user->uid > 0) {
	$userid = 'U' . $user->uid;
    } else {
	$userid = 'A' . $_supercookie->scid;
    }

    if ($view->name == 'machine_results' && isset($_SESSION['search_criteria'])) {
	//get user search data
	$attrs = mfGetUserAttributesArray($userid);
	if (!isset($attrs['position']) && mfGetLocation($user)) {
	    $location = mfGetLocation($user);
	}
	unset($attrs['categories']);
	unset($attrs['cultivations']);
	unset($attrs['machines']);
	//append new data
	$attrs['searches'][REQUEST_TIME] = array('type' => ($_SESSION['search_criteria']['machine_type']) ? $_SESSION['search_criteria']['machine_type'] : '-',
	    'coords' => ($_SESSION['search_criteria']['coords']) ? $_SESSION['search_criteria']['coords'] : '-',
	    'date_from' => ($_SESSION['search_criteria']['date_from']) ? $_SESSION['search_criteria']['date_from'] : '-',
	    'date_to' => ($_SESSION['search_criteria']['date_to']) ? $_SESSION['search_criteria']['date_to'] : '-',
	);
	//update user context
	mfUpdateUser($userid, $attrs, $location);
    }
}

function mermix_fiware_node_view($node, $view_mode, $langcode) {
    module_load_include('inc', 'mermix_fiware');
    global $user;
    global $_supercookie;

    $userid = '';
    $location = array();

    if ($user->uid > 0) {
	$userid = 'U' . $user->uid;
    } else {
	$userid = 'A' . $_supercookie->scid;
    }

    if ($view_mode == 'full' && $node->type == 'apartment') {
	//get user data

	$attrs = mfGetUserAttributesArray($userid);
	if (!isset($attrs['position']) && mfGetLocation($user)) {
	    $location = mfGetLocation($user);
	}
	unset($attrs['searches']);

	$cultivations = field_get_items('node', $node, 'field_cultivation');
	foreach ($cultivations as $key => $cultivation) {
	    $index = $cultivation['tid'];
	    $attrs['cultivations'][$index] = isset($attrs['cultivations'][$index]) ? (int) $attrs['cultivations'][$index] + 1 : 1;
	}
	$categories = field_get_items('node', $node, 'field_type');
	foreach ($categories as $key => $category) {
	    $index = $category['tid'];
	    $attrs['categories'][$index] = isset($attrs['categories'][$index]) ? (int) $attrs['categories'][$index] + 1 : 1;
	}
	$attrs['lasttype'] = $index;
	$index = $node->nid;
	$attrs['machines'][$index]['date'] = REQUEST_TIME;
	$attrs['machines'][$index]['viewed'] = isset($attrs['machines'][$index]['viewed']) ? (int) $attrs['machines'][$index]['viewed'] + 1 : 1;
	mfUpdateUser($userid, $attrs, $location);
    }
}

function mermix_fiware_node_update($node) {
    if ($node->type == 'apartment' && $node->status) {
	$attributes = array();

	module_load_include('inc', 'mermix_fiware');
	$nid = $node->nid;
	$location = array($node->field_address['und'][0]['lat'], $node->field_address['und'][0]['lon']);
	$attributes['created'] = $node->created;
	$attributes['machinetype'] = $node->field_type['und'][0]['tid'];
	$attributes['location'] = $node->field_location['und'][0]['tid'];
	$attributes['cultivation'] = $node->field_cultivation['und'][0]['tid'];
	mfUpdateMachine($nid, $attributes, $location);
    }
}
