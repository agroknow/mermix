<?php

/**
 * Implements hook_schema().
 */
function ak_mermix_tools_schema() {
  $schema['ak_mermix_tools_search_log'] = array(
    // This explains purpose of this table.
    'description' => 'Table to keep user machinery searches',

    // This array keeps information about the fields in this table.
    'fields' => array(
      'searchid' => array(
        'description' => 'The primary identifier for a search.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'user' => array(
        'description' => 'The id of user performed the search',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
	'default' => 0
      ),
      'machine_type' => array(
        'description' => 'The id of machine type',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
	'default' => 0
      ),
      'date_from' => array(
         'type' => 'int',
	  'not null' => FALSE,
	  'default' => null
      ),
      'date_to' => array(
	 'type' => 'int',
	  'not null' => FALSE,
	  'default' => null
      ),
      'coords' => array(
        'description' => 'lat lon provided in search comma separated',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
	'default' => ''
      ),
      'place' => array(
        'description' => 'human readable location name',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
	'default' => ''
      ),
      'hash' => array(
	'description' => 'md5 hash representation of main search arguments',
	'type' => 'varchar',
	'length' => 32,
	'not null' => FALSE,
	'default' => ''
       ),
      'searched' => array(
	  'type' => 'int',
	  'not null' => TRUE,
	  'default' => 0
       ),
      'results' => array(
	'description' => 'The number of results this search returned',
	'type' => 'int',
	'unsigned' => TRUE,
	'not null' => TRUE,
	'default' => 0
	),
    ),
    // Index 'rating' field to speed up retrieval of rows based on rating.
    'indexes' => array(
      'userindex' => array('user'),
      'searchedindex' => array('searched'),
    ),
      'foreign keys' => array(
      // This table contains a reference field to node table.
      // 'nid' field of this  table references a row in {node} table.
      'users' => array(
        'table' => 'users',
        'columns' => array('user' => 'uid'),
      ),
      'taxonomy_term_data' => array(
        'table' => 'taxonomy_term_data',
        'columns' => array('machine_type' => 'tid'),
      ),
    ),
    
    'primary key' => array('searchid'),
  );

  return $schema;
}


/**
 * Update addressfield geofield from lat- lon
 */
function ak_mermix_tools_update_7000(&$sandbox) {
    $properties = node_load_multiple(array(), array('type' => 'apartment'));
    if (!isset($sandbox['total'])) {
        $sandbox['total'] = count($properties);
        $sandbox['current'] = 0;
    }
    $nodes_per_pass = 20;
    $propertiesToProcess = array_slice($properties, $sandbox['current'], $nodes_per_pass);
    foreach ($propertiesToProcess as $property) {
        $property->field_address['und']['0'] = geofield_compute_values(
                array('lat' => $property->field_latitude['und']['0']['value'],
            'lon' => $property->field_longitude['und']['0']['value'],), GEOFIELD_INPUT_LAT_LON);
        field_attach_update('node', $property);
        $sandbox['current'] ++;
    }
    // Set the value for finished. If current == total then finished will be 1, signifying we are done.
    $sandbox['#finished'] = ($sandbox['current'] / $sandbox['total']);

    if ($sandbox['#finished'] === 1) {
        drupal_set_message(t('@nodes nodes of type Equipment Updated.', array('@nodes' => $sandbox['total'])));
    }
}
/**
 * Add apartment map view v2
 */
function ak_mermix_tools_update_7001(&$sandbox) {
    $view = new view();
    $view->name = 'apartment_map_v2';
    $view->description = '';
    $view->tag = 'default';
    $view->base_table = 'node';
    $view->human_name = 'Apartment map V2';
    $view->core = 7;
    $view->api_version = '3.0';
    $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */

    /* Display: Master */
    $handler = $view->new_display('default', 'Master', 'default');
    $handler->display->display_options['title'] = 'Apartment map';
    $handler->display->display_options['use_more_always'] = FALSE;
    $handler->display->display_options['access']['type'] = 'perm';
    $handler->display->display_options['cache']['type'] = 'none';
    $handler->display->display_options['query']['type'] = 'views_query';
    $handler->display->display_options['exposed_form']['type'] = 'basic';
    $handler->display->display_options['pager']['type'] = 'none';
    $handler->display->display_options['pager']['options']['offset'] = '0';
    $handler->display->display_options['style_plugin'] = 'aviators_map';
    $handler->display->display_options['style_options']['class'] = '';
    $handler->display->display_options['style_options']['class_field'] = 'tid';
    $handler->display->display_options['style_options']['map_field'] = 'field_map';
    $handler->display->display_options['style_options']['enable_cluster'] = 1;
    $handler->display->display_options['style_options']['clustering_size'] = '60';
    $handler->display->display_options['style_options']['zoom'] = '6';
    $handler->display->display_options['style_options']['width'] = '100%';
    $handler->display->display_options['style_options']['height'] = '550px';
    $handler->display->display_options['style_options']['default_position'] = 'center';
    $handler->display->display_options['style_options']['map_longitude'] = '';
    $handler->display->display_options['style_options']['map_latitude'] = '';
    $handler->display->display_options['style_options']['overview_map_control'] = 1;
    $handler->display->display_options['style_options']['pan_control_position'] = '0';
    $handler->display->display_options['style_options']['scale_control_position'] = '0';
    $handler->display->display_options['style_options']['rotate_control_position'] = '0';
    $handler->display->display_options['style_options']['zoom_control_position'] = '4';
    $handler->display->display_options['style_options']['streetview_control_position'] = '4';
    $handler->display->display_options['row_plugin'] = 'fields';
    /* Relationship: Content: Type (field_type) */
    $handler->display->display_options['relationships']['field_type_tid']['id'] = 'field_type_tid';
    $handler->display->display_options['relationships']['field_type_tid']['table'] = 'field_data_field_type';
    $handler->display->display_options['relationships']['field_type_tid']['field'] = 'field_type_tid';
    $handler->display->display_options['relationships']['field_type_tid']['required'] = TRUE;
    /* Field: Content: Title */
    $handler->display->display_options['fields']['title']['id'] = 'title';
    $handler->display->display_options['fields']['title']['table'] = 'node';
    $handler->display->display_options['fields']['title']['field'] = 'title';
    $handler->display->display_options['fields']['title']['label'] = '';
    $handler->display->display_options['fields']['title']['alter']['word_boundary'] = FALSE;
    $handler->display->display_options['fields']['title']['alter']['ellipsis'] = FALSE;
    
    /* Field: Content: Image */
    $handler->display->display_options['fields']['field_image']['id'] = 'field_image';
    $handler->display->display_options['fields']['field_image']['table'] = 'field_data_field_image';
    $handler->display->display_options['fields']['field_image']['field'] = 'field_image';
    $handler->display->display_options['fields']['field_image']['click_sort_column'] = 'fid';
    $handler->display->display_options['fields']['field_image']['settings'] = array(
        'image_style' => 'thumbnail',
        'image_link' => '',
    );
    /* Field: Taxonomy term: Map icon */
    $handler->display->display_options['fields']['field_map_icon']['id'] = 'field_map_icon';
    $handler->display->display_options['fields']['field_map_icon']['table'] = 'field_data_field_map_icon';
    $handler->display->display_options['fields']['field_map_icon']['field'] = 'field_map_icon';
    $handler->display->display_options['fields']['field_map_icon']['relationship'] = 'field_type_tid';
    $handler->display->display_options['fields']['field_map_icon']['exclude'] = TRUE;
    $handler->display->display_options['fields']['field_map_icon']['click_sort_column'] = 'fid';
    $handler->display->display_options['fields']['field_map_icon']['settings'] = array(
        'image_style' => '',
        'image_link' => '',
    );
    /* Sort criterion: Content: Post date */
    $handler->display->display_options['sorts']['created']['id'] = 'created';
    $handler->display->display_options['sorts']['created']['table'] = 'node';
    $handler->display->display_options['sorts']['created']['field'] = 'created';
    $handler->display->display_options['sorts']['created']['order'] = 'DESC';
    /* Filter criterion: Content: Published */
    $handler->display->display_options['filters']['status']['id'] = 'status';
    $handler->display->display_options['filters']['status']['table'] = 'node';
    $handler->display->display_options['filters']['status']['field'] = 'status';
    $handler->display->display_options['filters']['status']['value'] = 1;
    $handler->display->display_options['filters']['status']['group'] = 1;
    $handler->display->display_options['filters']['status']['expose']['operator'] = FALSE;
    /* Filter criterion: Content: Τύπος */
    $handler->display->display_options['filters']['type']['id'] = 'type';
    $handler->display->display_options['filters']['type']['table'] = 'node';
    $handler->display->display_options['filters']['type']['field'] = 'type';
    $handler->display->display_options['filters']['type']['value'] = array(
        'apartment' => 'apartment',
    );

    /* Display: Block */
    $handler = $view->new_display('block', 'Block', 'block');
    $handler->display->display_options['defaults']['fields'] = FALSE;
    /* Field: Content: Image */
    $handler->display->display_options['fields']['field_image']['id'] = 'field_image';
    $handler->display->display_options['fields']['field_image']['table'] = 'field_data_field_image';
    $handler->display->display_options['fields']['field_image']['field'] = 'field_image';
    $handler->display->display_options['fields']['field_image']['label'] = '';
    $handler->display->display_options['fields']['field_image']['element_label_colon'] = FALSE;
    $handler->display->display_options['fields']['field_image']['click_sort_column'] = 'fid';
    $handler->display->display_options['fields']['field_image']['settings'] = array(
        'image_style' => 'thumbnail',
        'image_link' => '',
    );
    /* Field: Content: Title */
    $handler->display->display_options['fields']['title']['id'] = 'title';
    $handler->display->display_options['fields']['title']['table'] = 'node';
    $handler->display->display_options['fields']['title']['field'] = 'title';
    $handler->display->display_options['fields']['title']['label'] = '';
    $handler->display->display_options['fields']['title']['alter']['word_boundary'] = FALSE;
    $handler->display->display_options['fields']['title']['alter']['ellipsis'] = FALSE;
    /* Field: Content: Location */
    $handler->display->display_options['fields']['field_location']['id'] = 'field_location';
    $handler->display->display_options['fields']['field_location']['table'] = 'field_data_field_location';
    $handler->display->display_options['fields']['field_location']['field'] = 'field_location';
    $handler->display->display_options['fields']['field_location']['label'] = '';
    $handler->display->display_options['fields']['field_location']['element_label_colon'] = FALSE;
    $handler->display->display_options['fields']['field_location']['click_sort_column'] = 'value';
    $handler->display->display_options['fields']['field_location']['type'] = 'text_default';
    $handler->display->display_options['fields']['field_location']['group_column'] = 'value';
    /* Field: Content: Price */
    $handler->display->display_options['fields']['field_price']['id'] = 'field_price';
    $handler->display->display_options['fields']['field_price']['table'] = 'field_data_field_price';
    $handler->display->display_options['fields']['field_price']['field'] = 'field_price';
    $handler->display->display_options['fields']['field_price']['label'] = '';
    $handler->display->display_options['fields']['field_price']['element_label_colon'] = FALSE;
    $handler->display->display_options['fields']['field_price']['type'] = 'number_decimal';
    $handler->display->display_options['fields']['field_price']['settings'] = array(
        'thousand_separator' => ' ',
        'decimal_separator' => '.',
        'scale' => '2',
        'prefix_suffix' => 1,
    );
    /* Field: Content: Link */
    $handler->display->display_options['fields']['view_node']['id'] = 'view_node';
    $handler->display->display_options['fields']['view_node']['table'] = 'views_entity_node';
    $handler->display->display_options['fields']['view_node']['field'] = 'view_node';
    $handler->display->display_options['fields']['view_node']['label'] = '';
    $handler->display->display_options['fields']['view_node']['element_label_colon'] = FALSE;
    /* Field: Taxonomy term: Term ID */
    $handler->display->display_options['fields']['tid']['id'] = 'tid';
    $handler->display->display_options['fields']['tid']['table'] = 'taxonomy_term_data';
    $handler->display->display_options['fields']['tid']['field'] = 'tid';
    $handler->display->display_options['fields']['tid']['relationship'] = 'field_type_tid';
    $handler->display->display_options['fields']['tid']['label'] = '';
    $handler->display->display_options['fields']['tid']['exclude'] = TRUE;
    $handler->display->display_options['fields']['tid']['element_label_colon'] = FALSE;
    /* Field: Content: Address */
    $handler->display->display_options['fields']['field_address']['id'] = 'field_address';
    $handler->display->display_options['fields']['field_address']['table'] = 'field_data_field_address';
    $handler->display->display_options['fields']['field_address']['field'] = 'field_address';
    $handler->display->display_options['fields']['field_address']['exclude'] = TRUE;
    $handler->display->display_options['fields']['field_address']['click_sort_column'] = 'geom';
    $handler->display->display_options['fields']['field_address']['type'] = 'geofield_latlon';
    $handler->display->display_options['fields']['field_address']['settings'] = array(
        'data' => 'full',
        'format' => 'decimal_degrees',
        'labels' => 0,
    );
    views_save_view($view);
}
/**
 * Delete apartment map view
 */
function ak_mermix_tools_update_7002(&$sandbox) {
    $viewToDel = views_get_view('apartment_map');
    $viewToDel->delete();
}
/**
 * Insert updated apartment map view
 */
function ak_mermix_tools_update_7003(&$sandbox) {
        
    $view = new view();
    $view->name = 'apartment_map';
    $view->description = '';
    $view->tag = 'default';
    $view->base_table = 'node';
    $view->human_name = 'Apartment map';
    $view->core = 7;
    $view->api_version = '3.0';
    $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */

    /* Display: Master */
    $handler = $view->new_display('default', 'Master', 'default');
    $handler->display->display_options['title'] = 'Apartment map';
    $handler->display->display_options['use_more_always'] = FALSE;
    $handler->display->display_options['access']['type'] = 'perm';
    $handler->display->display_options['cache']['type'] = 'none';
    $handler->display->display_options['query']['type'] = 'views_query';
    $handler->display->display_options['exposed_form']['type'] = 'basic';
    $handler->display->display_options['pager']['type'] = 'none';
    $handler->display->display_options['pager']['options']['offset'] = '0';
    $handler->display->display_options['style_plugin'] = 'realia_gmap';
    $handler->display->display_options['style_options']['latitude'] = '22.353125';
    $handler->display->display_options['style_options']['longitude'] = '38.938081';
    $handler->display->display_options['style_options']['latitude-field'] = 'field_latitude';
    $handler->display->display_options['style_options']['longitude-field'] = 'field_longitude';
    $handler->display->display_options['style_options']['zoom'] = '15';
    $handler->display->display_options['style_options']['width'] = '100%';
    $handler->display->display_options['style_options']['height'] = '485px';
    $handler->display->display_options['style_options']['default-position'] = 'center zoom';
    $handler->display->display_options['row_plugin'] = 'fields';
    /* Relationship: Content: Type (field_type) */
    $handler->display->display_options['relationships']['field_type_tid']['id'] = 'field_type_tid';
    $handler->display->display_options['relationships']['field_type_tid']['table'] = 'field_data_field_type';
    $handler->display->display_options['relationships']['field_type_tid']['field'] = 'field_type_tid';
    $handler->display->display_options['relationships']['field_type_tid']['required'] = TRUE;
    /* Field: Content: Title */
    $handler->display->display_options['fields']['title']['id'] = 'title';
    $handler->display->display_options['fields']['title']['table'] = 'node';
    $handler->display->display_options['fields']['title']['field'] = 'title';
    $handler->display->display_options['fields']['title']['label'] = '';
    $handler->display->display_options['fields']['title']['alter']['word_boundary'] = FALSE;
    $handler->display->display_options['fields']['title']['alter']['ellipsis'] = FALSE;
 
    /* Field: Content: Image */
    $handler->display->display_options['fields']['field_image']['id'] = 'field_image';
    $handler->display->display_options['fields']['field_image']['table'] = 'field_data_field_image';
    $handler->display->display_options['fields']['field_image']['field'] = 'field_image';
    $handler->display->display_options['fields']['field_image']['click_sort_column'] = 'fid';
    $handler->display->display_options['fields']['field_image']['settings'] = array(
        'image_style' => 'thumbnail',
        'image_link' => '',
    );
    /* Field: Taxonomy term: Map icon */
    $handler->display->display_options['fields']['field_map_icon']['id'] = 'field_map_icon';
    $handler->display->display_options['fields']['field_map_icon']['table'] = 'field_data_field_map_icon';
    $handler->display->display_options['fields']['field_map_icon']['field'] = 'field_map_icon';
    $handler->display->display_options['fields']['field_map_icon']['relationship'] = 'field_type_tid';
    $handler->display->display_options['fields']['field_map_icon']['exclude'] = TRUE;
    $handler->display->display_options['fields']['field_map_icon']['click_sort_column'] = 'fid';
    $handler->display->display_options['fields']['field_map_icon']['settings'] = array(
        'image_style' => '',
        'image_link' => '',
    );
    /* Sort criterion: Content: Post date */
    $handler->display->display_options['sorts']['created']['id'] = 'created';
    $handler->display->display_options['sorts']['created']['table'] = 'node';
    $handler->display->display_options['sorts']['created']['field'] = 'created';
    $handler->display->display_options['sorts']['created']['order'] = 'DESC';
    /* Filter criterion: Content: Published */
    $handler->display->display_options['filters']['status']['id'] = 'status';
    $handler->display->display_options['filters']['status']['table'] = 'node';
    $handler->display->display_options['filters']['status']['field'] = 'status';
    $handler->display->display_options['filters']['status']['value'] = 1;
    $handler->display->display_options['filters']['status']['group'] = 1;
    $handler->display->display_options['filters']['status']['expose']['operator'] = FALSE;
    /* Filter criterion: Content: Τύπος */
    $handler->display->display_options['filters']['type']['id'] = 'type';
    $handler->display->display_options['filters']['type']['table'] = 'node';
    $handler->display->display_options['filters']['type']['field'] = 'type';
    $handler->display->display_options['filters']['type']['value'] = array(
        'apartment' => 'apartment',
    );

    /* Display: Block */
    $handler = $view->new_display('block', 'Block', 'block');
    $handler->display->display_options['defaults']['fields'] = FALSE;
    /* Field: Content: Image */
    $handler->display->display_options['fields']['field_image']['id'] = 'field_image';
    $handler->display->display_options['fields']['field_image']['table'] = 'field_data_field_image';
    $handler->display->display_options['fields']['field_image']['field'] = 'field_image';
    $handler->display->display_options['fields']['field_image']['label'] = '';
    $handler->display->display_options['fields']['field_image']['element_label_colon'] = FALSE;
    $handler->display->display_options['fields']['field_image']['click_sort_column'] = 'fid';
    $handler->display->display_options['fields']['field_image']['settings'] = array(
        'image_style' => 'thumbnail',
        'image_link' => '',
    );
    /* Field: Content: Title */
    $handler->display->display_options['fields']['title']['id'] = 'title';
    $handler->display->display_options['fields']['title']['table'] = 'node';
    $handler->display->display_options['fields']['title']['field'] = 'title';
    $handler->display->display_options['fields']['title']['label'] = '';
    $handler->display->display_options['fields']['title']['alter']['word_boundary'] = FALSE;
    $handler->display->display_options['fields']['title']['alter']['ellipsis'] = FALSE;
    /* Field: Content: Location */
    $handler->display->display_options['fields']['field_location']['id'] = 'field_location';
    $handler->display->display_options['fields']['field_location']['table'] = 'field_data_field_location';
    $handler->display->display_options['fields']['field_location']['field'] = 'field_location';
    $handler->display->display_options['fields']['field_location']['label'] = '';
    $handler->display->display_options['fields']['field_location']['element_label_colon'] = FALSE;
    $handler->display->display_options['fields']['field_location']['click_sort_column'] = 'value';
    $handler->display->display_options['fields']['field_location']['type'] = 'text_default';
    $handler->display->display_options['fields']['field_location']['group_column'] = 'value';
    /* Field: Content: Price */
    $handler->display->display_options['fields']['field_price']['id'] = 'field_price';
    $handler->display->display_options['fields']['field_price']['table'] = 'field_data_field_price';
    $handler->display->display_options['fields']['field_price']['field'] = 'field_price';
    $handler->display->display_options['fields']['field_price']['label'] = '';
    $handler->display->display_options['fields']['field_price']['element_label_colon'] = FALSE;
    $handler->display->display_options['fields']['field_price']['type'] = 'number_decimal';
    $handler->display->display_options['fields']['field_price']['settings'] = array(
        'thousand_separator' => ' ',
        'decimal_separator' => '.',
        'scale' => '2',
        'prefix_suffix' => 1,
    );
    /* Field: Content: Link */
    $handler->display->display_options['fields']['view_node']['id'] = 'view_node';
    $handler->display->display_options['fields']['view_node']['table'] = 'views_entity_node';
    $handler->display->display_options['fields']['view_node']['field'] = 'view_node';
    $handler->display->display_options['fields']['view_node']['label'] = '';
    $handler->display->display_options['fields']['view_node']['element_label_colon'] = FALSE;
    /* Field: Taxonomy term: Map icon */
    $handler->display->display_options['fields']['field_map_icon']['id'] = 'field_map_icon';
    $handler->display->display_options['fields']['field_map_icon']['table'] = 'field_data_field_map_icon';
    $handler->display->display_options['fields']['field_map_icon']['field'] = 'field_map_icon';
    $handler->display->display_options['fields']['field_map_icon']['relationship'] = 'field_type_tid';
    $handler->display->display_options['fields']['field_map_icon']['exclude'] = TRUE;
    $handler->display->display_options['fields']['field_map_icon']['click_sort_column'] = 'fid';
    $handler->display->display_options['fields']['field_map_icon']['settings'] = array(
        'image_style' => '',
        'image_link' => '',
    );

    /* Display: Block */
    $handler = $view->new_display('block', 'Block', 'apartment_map_detail');
    $handler->display->display_options['defaults']['title'] = FALSE;
    $handler->display->display_options['title'] = 'Map';
    $handler->display->display_options['defaults']['style_plugin'] = FALSE;
    $handler->display->display_options['style_plugin'] = 'realia_gmap';
    $handler->display->display_options['style_options']['latitude'] = '34.015610';
    $handler->display->display_options['style_options']['longitude'] = '-118.467546';
    $handler->display->display_options['style_options']['latitude-field'] = 'field_latitude';
    $handler->display->display_options['style_options']['longitude-field'] = 'field_longitude';
    $handler->display->display_options['style_options']['zoom'] = '15';
    $handler->display->display_options['style_options']['width'] = '100%';
    $handler->display->display_options['style_options']['height'] = '455px';
    $handler->display->display_options['style_options']['default-position'] = 'center';
    $handler->display->display_options['defaults']['style_options'] = FALSE;
    $handler->display->display_options['defaults']['row_plugin'] = FALSE;
    $handler->display->display_options['row_plugin'] = 'fields';
    $handler->display->display_options['defaults']['row_options'] = FALSE;
    $handler->display->display_options['defaults']['fields'] = FALSE;
    /* Field: Content: Image */
    $handler->display->display_options['fields']['field_image']['id'] = 'field_image';
    $handler->display->display_options['fields']['field_image']['table'] = 'field_data_field_image';
    $handler->display->display_options['fields']['field_image']['field'] = 'field_image';
    $handler->display->display_options['fields']['field_image']['label'] = '';
    $handler->display->display_options['fields']['field_image']['element_label_colon'] = FALSE;
    $handler->display->display_options['fields']['field_image']['click_sort_column'] = 'fid';
    $handler->display->display_options['fields']['field_image']['settings'] = array(
        'image_style' => 'thumbnail',
        'image_link' => 'content',
    );
    /* Field: Content: Title */
    $handler->display->display_options['fields']['title']['id'] = 'title';
    $handler->display->display_options['fields']['title']['table'] = 'node';
    $handler->display->display_options['fields']['title']['field'] = 'title';
    $handler->display->display_options['fields']['title']['label'] = '';
    $handler->display->display_options['fields']['title']['alter']['word_boundary'] = FALSE;
    $handler->display->display_options['fields']['title']['alter']['ellipsis'] = FALSE;
    /* Field: Content: Location */
    $handler->display->display_options['fields']['field_location']['id'] = 'field_location';
    $handler->display->display_options['fields']['field_location']['table'] = 'field_data_field_location';
    $handler->display->display_options['fields']['field_location']['field'] = 'field_location';
    $handler->display->display_options['fields']['field_location']['label'] = '';
    $handler->display->display_options['fields']['field_location']['element_label_colon'] = FALSE;
    $handler->display->display_options['fields']['field_location']['type'] = 'taxonomy_term_reference_plain';
    $handler->display->display_options['fields']['field_location']['group_column'] = 'value';
    $handler->display->display_options['fields']['field_location']['delta_offset'] = '0';
    /* Field: Content: Price */
    $handler->display->display_options['fields']['field_price']['id'] = 'field_price';
    $handler->display->display_options['fields']['field_price']['table'] = 'field_data_field_price';
    $handler->display->display_options['fields']['field_price']['field'] = 'field_price';
    $handler->display->display_options['fields']['field_price']['label'] = '';
    $handler->display->display_options['fields']['field_price']['element_label_colon'] = FALSE;
    $handler->display->display_options['fields']['field_price']['settings'] = array(
        'thousand_separator' => ' ',
        'prefix_suffix' => 1,
    );
    /* Field: Content: Link */
    $handler->display->display_options['fields']['view_node']['id'] = 'view_node';
    $handler->display->display_options['fields']['view_node']['table'] = 'views_entity_node';
    $handler->display->display_options['fields']['view_node']['field'] = 'view_node';
    $handler->display->display_options['fields']['view_node']['label'] = '';
    $handler->display->display_options['fields']['view_node']['element_label_colon'] = FALSE;
    /* Field: Taxonomy term: Map icon */
    $handler->display->display_options['fields']['field_map_icon']['id'] = 'field_map_icon';
    $handler->display->display_options['fields']['field_map_icon']['table'] = 'field_data_field_map_icon';
    $handler->display->display_options['fields']['field_map_icon']['field'] = 'field_map_icon';
    $handler->display->display_options['fields']['field_map_icon']['relationship'] = 'field_type_tid';
    $handler->display->display_options['fields']['field_map_icon']['exclude'] = TRUE;
    $handler->display->display_options['fields']['field_map_icon']['click_sort_column'] = 'fid';
    $handler->display->display_options['fields']['field_map_icon']['settings'] = array(
        'image_style' => '',
        'image_link' => '',
    );
    /* Field: Content: Address */
    $handler->display->display_options['fields']['field_address']['id'] = 'field_address';
    $handler->display->display_options['fields']['field_address']['table'] = 'field_data_field_address';
    $handler->display->display_options['fields']['field_address']['field'] = 'field_address';
    $handler->display->display_options['fields']['field_address']['exclude'] = TRUE;
    $handler->display->display_options['fields']['field_address']['click_sort_column'] = 'geom';
    $handler->display->display_options['fields']['field_address']['type'] = 'geofield_latlon';
    $handler->display->display_options['fields']['field_address']['settings'] = array(
        'data' => 'full',
        'format' => 'decimal_degrees',
        'labels' => 0,
    );
    $handler->display->display_options['defaults']['arguments'] = FALSE;
    /* Contextual filter: Content: Nid */
    $handler->display->display_options['arguments']['nid']['id'] = 'nid';
    $handler->display->display_options['arguments']['nid']['table'] = 'node';
    $handler->display->display_options['arguments']['nid']['field'] = 'nid';
    $handler->display->display_options['arguments']['nid']['default_action'] = 'default';
    $handler->display->display_options['arguments']['nid']['default_argument_type'] = 'node';
    $handler->display->display_options['arguments']['nid']['summary']['number_of_records'] = '0';
    $handler->display->display_options['arguments']['nid']['summary']['format'] = 'default_summary';
    $handler->display->display_options['arguments']['nid']['summary_options']['items_per_page'] = '25';
    
    views_save_view($view);
}

/**
 * Update values for location and populate Location vocabulary - from geofield lat/lon fields
 */
function ak_mermix_tools_update_7004(&$sandbox) {
    $properties = node_load_multiple(array(), array('type' => 'apartment'));
    if (!isset($sandbox['total'])) {
        $sandbox['total'] = count($properties);
        $sandbox['current'] = 0;
    }
    $nodes_per_pass = 5;
    $propertiesToProcess = array_slice($properties, $sandbox['current'], $nodes_per_pass);
    foreach ($propertiesToProcess as $property) {
        $entWrapper = entity_metadata_wrapper('node', $property);
        ak_mermix_tools_updateAddress($entWrapper);
        $entWrapper->save();
        //field_attach_update('node', $property);
        $sandbox['current'] ++;
    }
    // Set the value for finished. If current == total then finished will be 1, signifying we are done.
    $sandbox['#finished'] = ($sandbox['current'] / $sandbox['total']);

    if ($sandbox['#finished'] === 1) {
        drupal_set_message(t('@nodes nodes of type Equipment Updated.', array('@nodes' => $sandbox['total'])));
    }
}
/**
 * Delete lat and lon fields from Equipment type.
 */
function ak_mermix_tools_update_7005(&$sandbox) {
    $instances = field_info_instances('node', 'apartment');
    foreach (array('field_latitude','field_longitude') as $fieldname) {
        field_delete_instance($instances[$fieldname], true);
    }
}

/**
 * Create view user content
 */
function ak_mermix_tools_update_7006(&$sandbox) {
        
$view = new view();
$view->name = 'user_content';
$view->description = '';
$view->tag = 'default';
$view->base_table = 'node';
$view->human_name = 'User content';
$view->core = 7;
$view->api_version = '3.0';
$view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */

/* Display: Master */
$handler = $view->new_display('default', 'Master', 'default');
$handler->display->display_options['use_more_always'] = FALSE;
$handler->display->display_options['access']['type'] = 'role';
$handler->display->display_options['access']['role'] = array(
  5 => '5',
);
$handler->display->display_options['cache']['type'] = 'none';
$handler->display->display_options['query']['type'] = 'views_query';
$handler->display->display_options['exposed_form']['type'] = 'basic';
$handler->display->display_options['pager']['type'] = 'full';
$handler->display->display_options['pager']['options']['items_per_page'] = '10';
$handler->display->display_options['pager']['options']['tags']['first'] = '« αρχή';
$handler->display->display_options['pager']['options']['tags']['previous'] = '< προηγούμενο';
$handler->display->display_options['pager']['options']['tags']['next'] = 'επόμενο >';
$handler->display->display_options['pager']['options']['tags']['last'] = 'τελευταίο »';
$handler->display->display_options['style_plugin'] = 'table';
/* Relationship: Content: Author */
$handler->display->display_options['relationships']['uid']['id'] = 'uid';
$handler->display->display_options['relationships']['uid']['table'] = 'node';
$handler->display->display_options['relationships']['uid']['field'] = 'uid';
$handler->display->display_options['relationships']['uid']['required'] = TRUE;
/* Field: Content: Title */
$handler->display->display_options['fields']['title']['id'] = 'title';
$handler->display->display_options['fields']['title']['table'] = 'node';
$handler->display->display_options['fields']['title']['field'] = 'title';
$handler->display->display_options['fields']['title']['alter']['word_boundary'] = FALSE;
$handler->display->display_options['fields']['title']['alter']['ellipsis'] = FALSE;
/* Field: Content: Edit link */
$handler->display->display_options['fields']['edit_node']['id'] = 'edit_node';
$handler->display->display_options['fields']['edit_node']['table'] = 'views_entity_node';
$handler->display->display_options['fields']['edit_node']['field'] = 'edit_node';
/* Sort criterion: Content: Post date */
$handler->display->display_options['sorts']['created']['id'] = 'created';
$handler->display->display_options['sorts']['created']['table'] = 'node';
$handler->display->display_options['sorts']['created']['field'] = 'created';
$handler->display->display_options['sorts']['created']['order'] = 'DESC';
/* Filter criterion: User: Current */
$handler->display->display_options['filters']['uid_current']['id'] = 'uid_current';
$handler->display->display_options['filters']['uid_current']['table'] = 'users';
$handler->display->display_options['filters']['uid_current']['field'] = 'uid_current';
$handler->display->display_options['filters']['uid_current']['relationship'] = 'uid';
$handler->display->display_options['filters']['uid_current']['value'] = '1';

/* Display: Page */
$handler = $view->new_display('page', 'Page', 'page');
$handler->display->display_options['path'] = 'user-content';
$handler->display->display_options['menu']['type'] = 'normal';
$handler->display->display_options['menu']['title'] = 'My content';
$handler->display->display_options['menu']['name'] = 'menu-content-management';

    
    views_save_view($view);
}

/**
 * Create view pending content
 */
function ak_mermix_tools_update_7007(&$sandbox) {
        
    $view = new view();
$view->name = 'pending_content';
$view->description = '';
$view->tag = 'default';
$view->base_table = 'node';
$view->human_name = 'Pending content';
$view->core = 7;
$view->api_version = '3.0';
$view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */

/* Display: Master */
$handler = $view->new_display('default', 'Master', 'default');
$handler->display->display_options['title'] = 'Pending content';
$handler->display->display_options['use_more_always'] = FALSE;
$handler->display->display_options['access']['type'] = 'role';
$handler->display->display_options['access']['role'] = array(
  3 => '3',
);
$handler->display->display_options['cache']['type'] = 'none';
$handler->display->display_options['query']['type'] = 'views_query';
$handler->display->display_options['exposed_form']['type'] = 'basic';
$handler->display->display_options['pager']['type'] = 'full';
$handler->display->display_options['pager']['options']['items_per_page'] = '10';
$handler->display->display_options['pager']['options']['tags']['first'] = '« αρχή';
$handler->display->display_options['pager']['options']['tags']['previous'] = '< προηγούμενο';
$handler->display->display_options['pager']['options']['tags']['next'] = 'επόμενο >';
$handler->display->display_options['pager']['options']['tags']['last'] = 'τελευταίο »';
$handler->display->display_options['style_plugin'] = 'table';
$handler->display->display_options['style_options']['columns'] = array(
  'views_bulk_operations' => 'views_bulk_operations',
  'title' => 'title',
  'type' => 'type',
  'name' => 'name',
  'changed' => 'changed',
  'language' => 'language',
  'edit_node' => 'edit_node',
  'delete_node' => 'edit_node',
);
$handler->display->display_options['style_options']['default'] = '-1';
$handler->display->display_options['style_options']['info'] = array(
  'views_bulk_operations' => array(
    'align' => '',
    'separator' => '',
    'empty_column' => 0,
  ),
  'title' => array(
    'sortable' => 0,
    'default_sort_order' => 'asc',
    'align' => '',
    'separator' => '',
    'empty_column' => 0,
  ),
  'type' => array(
    'sortable' => 0,
    'default_sort_order' => 'asc',
    'align' => '',
    'separator' => '',
    'empty_column' => 0,
  ),
  'name' => array(
    'sortable' => 0,
    'default_sort_order' => 'asc',
    'align' => '',
    'separator' => '',
    'empty_column' => 0,
  ),
  'changed' => array(
    'sortable' => 1,
    'default_sort_order' => 'desc',
    'align' => '',
    'separator' => '',
    'empty_column' => 0,
  ),
  'language' => array(
    'sortable' => 0,
    'default_sort_order' => 'asc',
    'align' => '',
    'separator' => '',
    'empty_column' => 0,
  ),
  'edit_node' => array(
    'align' => '',
    'separator' => '  ',
    'empty_column' => 0,
  ),
  'delete_node' => array(
    'align' => '',
    'separator' => '',
    'empty_column' => 0,
  ),
);
$handler->display->display_options['style_options']['sticky'] = TRUE;
/* Relationship: Content: Author */
$handler->display->display_options['relationships']['uid']['id'] = 'uid';
$handler->display->display_options['relationships']['uid']['table'] = 'node';
$handler->display->display_options['relationships']['uid']['field'] = 'uid';
$handler->display->display_options['relationships']['uid']['required'] = TRUE;
/* Field: Bulk operations: Content */
$handler->display->display_options['fields']['views_bulk_operations']['id'] = 'views_bulk_operations';
$handler->display->display_options['fields']['views_bulk_operations']['table'] = 'node';
$handler->display->display_options['fields']['views_bulk_operations']['field'] = 'views_bulk_operations';
$handler->display->display_options['fields']['views_bulk_operations']['vbo_settings']['display_type'] = '0';
$handler->display->display_options['fields']['views_bulk_operations']['vbo_settings']['enable_select_all_pages'] = 1;
$handler->display->display_options['fields']['views_bulk_operations']['vbo_settings']['row_clickable'] = 1;
$handler->display->display_options['fields']['views_bulk_operations']['vbo_settings']['force_single'] = 0;
$handler->display->display_options['fields']['views_bulk_operations']['vbo_settings']['entity_load_capacity'] = '10';
$handler->display->display_options['fields']['views_bulk_operations']['vbo_operations'] = array(
  'action::node_publish_action' => array(
    'selected' => 1,
    'postpone_processing' => 0,
    'skip_confirmation' => 0,
    'override_label' => 0,
    'label' => '',
  ),
);
/* Field: Content: Title */
$handler->display->display_options['fields']['title']['id'] = 'title';
$handler->display->display_options['fields']['title']['table'] = 'node';
$handler->display->display_options['fields']['title']['field'] = 'title';
$handler->display->display_options['fields']['title']['label'] = '';
$handler->display->display_options['fields']['title']['alter']['word_boundary'] = FALSE;
$handler->display->display_options['fields']['title']['alter']['ellipsis'] = FALSE;
/* Field: Content: Τύπος */
$handler->display->display_options['fields']['type']['id'] = 'type';
$handler->display->display_options['fields']['type']['table'] = 'node';
$handler->display->display_options['fields']['type']['field'] = 'type';
/* Field: User: Όνομα */
$handler->display->display_options['fields']['name']['id'] = 'name';
$handler->display->display_options['fields']['name']['table'] = 'users';
$handler->display->display_options['fields']['name']['field'] = 'name';
$handler->display->display_options['fields']['name']['relationship'] = 'uid';
/* Field: Content: Updated date */
$handler->display->display_options['fields']['changed']['id'] = 'changed';
$handler->display->display_options['fields']['changed']['table'] = 'node';
$handler->display->display_options['fields']['changed']['field'] = 'changed';
$handler->display->display_options['fields']['changed']['date_format'] = 'availability_calendar_date_display';
/* Field: Content: Language */
$handler->display->display_options['fields']['language']['id'] = 'language';
$handler->display->display_options['fields']['language']['table'] = 'node';
$handler->display->display_options['fields']['language']['field'] = 'language';
/* Field: Content: Edit link */
$handler->display->display_options['fields']['edit_node']['id'] = 'edit_node';
$handler->display->display_options['fields']['edit_node']['table'] = 'views_entity_node';
$handler->display->display_options['fields']['edit_node']['field'] = 'edit_node';
$handler->display->display_options['fields']['edit_node']['label'] = 'Operations';
/* Field: Content: Delete link */
$handler->display->display_options['fields']['delete_node']['id'] = 'delete_node';
$handler->display->display_options['fields']['delete_node']['table'] = 'views_entity_node';
$handler->display->display_options['fields']['delete_node']['field'] = 'delete_node';
/* Sort criterion: Content: Post date */
$handler->display->display_options['sorts']['created']['id'] = 'created';
$handler->display->display_options['sorts']['created']['table'] = 'node';
$handler->display->display_options['sorts']['created']['field'] = 'created';
$handler->display->display_options['sorts']['created']['order'] = 'DESC';
/* Filter criterion: Content: Published */
$handler->display->display_options['filters']['status']['id'] = 'status';
$handler->display->display_options['filters']['status']['table'] = 'node';
$handler->display->display_options['filters']['status']['field'] = 'status';
$handler->display->display_options['filters']['status']['value'] = '0';
$handler->display->display_options['filters']['status']['group'] = 1;
$handler->display->display_options['filters']['status']['expose']['operator'] = FALSE;
/* Filter criterion: User: Roles */
$handler->display->display_options['filters']['rid']['id'] = 'rid';
$handler->display->display_options['filters']['rid']['table'] = 'users_roles';
$handler->display->display_options['filters']['rid']['field'] = 'rid';
$handler->display->display_options['filters']['rid']['relationship'] = 'uid';
$handler->display->display_options['filters']['rid']['operator'] = 'not';
$handler->display->display_options['filters']['rid']['value'] = array(
  3 => '3',
);
$handler->display->display_options['filters']['rid']['expose']['operator_id'] = 'rid_op';
$handler->display->display_options['filters']['rid']['expose']['label'] = 'Roles';
$handler->display->display_options['filters']['rid']['expose']['operator'] = 'rid_op';
$handler->display->display_options['filters']['rid']['expose']['identifier'] = 'rid';
$handler->display->display_options['filters']['rid']['expose']['remember_roles'] = array(
  2 => '2',
  1 => 0,
  3 => 0,
  5 => 0,
  6 => 0,
  7 => 0,
);
$handler->display->display_options['filters']['rid']['expose']['reduce'] = TRUE;
$handler->display->display_options['filters']['rid']['group_info']['label'] = 'Roles';
$handler->display->display_options['filters']['rid']['group_info']['identifier'] = 'rid';
$handler->display->display_options['filters']['rid']['group_info']['remember'] = FALSE;
$handler->display->display_options['filters']['rid']['group_info']['group_items'] = array(
  1 => array(),
  2 => array(),
  3 => array(),
);

/* Display: Page */
$handler = $view->new_display('page', 'Page', 'page');
$handler->display->display_options['path'] = 'admin/pending-content';
$handler->display->display_options['menu']['type'] = 'normal';
$handler->display->display_options['menu']['title'] = 'Pending content';
$handler->display->display_options['menu']['name'] = 'management';

    views_save_view($view);
}


/**
 * Implements hook_install()
 */
/*function ak_mermix_tools_install(){
    drupal_set_installed_schema_version('ak_mermix_tools', 0);
}*/


/**
 * Update prices from existing values.
 */
function ak_mermix_tools_update_7008(&$sandbox) {
  $term = taxonomy_get_term_by_name('stremma');
  $term = array_pop($term);
  $tid = $term->tid;
  $properties = node_load_multiple(array(), array('type' => 'apartment'));
    if (!isset($sandbox['total'])) {
        $sandbox['total'] = count($properties);
        $sandbox['current'] = 0;
    }
    $nodes_per_pass = 25;
    $propertiesToProcess = array_slice($properties, $sandbox['current'], $nodes_per_pass);
    foreach ($propertiesToProcess as $property) {
	$property->field_multiprice['und']['0']['id'] = $sandbox['current'];
        $property->field_multiprice['und']['0']['field_multiprice_value']['und'][0]['value'] = number_format($property->field_price['und'][0]['value'],2, '.', '');
        $property->field_multiprice['und']['0']['field_multiprice_unit']['und'][0]['tid'] = $tid;
        field_attach_update('node', $property);
        $sandbox['current'] ++;
    }
    // Set the value for finished. If current == total then finished will be 1, signifying we are done.
    $sandbox['#finished'] = ($sandbox['current'] / $sandbox['total']);

    if ($sandbox['#finished'] === 1) {
        drupal_set_message(t('@nodes nodes of type Equipment Updated.', array('@nodes' => $sandbox['total'])));
    }  
}

/**
 * Delete price field from Equipment type.
 */
function ak_mermix_tools_update_7009(&$sandbox) {
    $instances = field_info_instances('node', 'apartment');
        field_delete_instance($instances['field_price'], true);
}


/**
 * Create users from content type renter
 */
function ak_mermix_tools_update_7010(&$sandbox) {
 $password = 'mermixuser';
 $ownerid = array_search('Owner', user_roles());
 $renters = node_load_multiple(array(), array('type' => 'renter'));
    if (!isset($sandbox['total'])) {
        $sandbox['total'] = count($renters);
        $sandbox['current'] = 0;
    }
    $nodes_per_pass = 25;
    $rentersToProcess = array_slice($renters, $sandbox['current'], $nodes_per_pass);
    foreach ($rentersToProcess as $renter) {
	//get renter data
	list($lastname,$name) = explode(' ', $renter->title);
	$email =  isset($renter->field_email['und'][0]['value']) ? $renter->field_email['und'][0]['value'] : 'usermail'. $renter->nid . '@example.com';
	$phone =  isset($renter->field_phone['und'][0]['value']) ? $renter->field_phone['und'][0]['value'] : '0123456789';
	//create the user
	$new_user = array(
	'name' => 'user_'.$renter->nid,
	'pass' => $password,
	'mail' => $email,
	'signature_format' => 'full_html',
	'status' => 1,
	'timezone' => variable_get('date_default_timezone', @date_default_timezone_get()),
	'init' => $email,
	'roles' => array(
	    DRUPAL_AUTHENTICATED_RID => 'authenticated user',
	    $ownerid => 'Owner'
	),
	'field_first_name' => array(
	'und' => array(
	    0 => array(
	    'value' => $name ? $name : 'name',
	    ),
	    )),
	'field_last_name' => array(
	    'und' => array(
	    0 => array(
	    'value' => $lastname,
	    ),
	    )),
	'field_phone_number' => array(
	    'und' => array(
	    0 => array(
	    'value' => $phone,
	    ),
	    )),
	);
	$account= user_save(NULL, $new_user);
	//query for equipment assigned to renter and change the author to the above created user.
	$userNodes = db_select('field_data_field_assigned_agents', 'agents')
	->fields('agents',array('entity_id'))
	->condition('agents.field_assigned_agents_target_id', $renter->nid)
	->execute()
	->fetchCol();
	foreach ($userNodes as $id) {
	$nodeObj = node_load($id);
	$nodeObj->uid = $account->uid;
	node_save($nodeObj);
	}
	$sandbox['current'] ++;
    }
    $sandbox['#finished'] = ($sandbox['current'] / $sandbox['total']);

    if ($sandbox['#finished'] === 1) {
        drupal_set_message(t('@users Users created.', array('@users' => $sandbox['total'])));
    }  
}

/**
 * Populate field_image field from files existing in slideshow
 */
function ak_mermix_tools_update_7011(&$sandbox) {

  $properties = node_load_multiple(array(), array('type' => 'apartment'));
    if (!isset($sandbox['total'])) {
        $sandbox['total'] = count($properties);
        $sandbox['current'] = 0;
    }
    $nodes_per_pass = 25;
    $propertiesToProcess = array_slice($properties, $sandbox['current'], $nodes_per_pass);
    foreach ($propertiesToProcess as $property) {
	$imageid = 1;
	foreach ($property->field_product_slideshow['und'] as $value){
	    $info = image_get_info(file_load($value['fid'])->uri);
	    $property->field_image['und'][$imageid]['fid'] = $value['fid'];
	    $property->field_image['und'][$imageid]['title'] = '';
	    $property->field_image['und'][$imageid]['alt'] = '';
	    $property->field_image['und'][$imageid]['width'] = $info['width'];
	    $property->field_image['und'][$imageid]['height'] = $info['height'];
	    $imageid++;
	}
        field_attach_update('node', $property);
        $sandbox['current'] ++;
    }
    // Set the value for finished. If current == total then finished will be 1, signifying we are done.
    $sandbox['#finished'] = ($sandbox['current'] / $sandbox['total']);

    if ($sandbox['#finished'] === 1) {
        drupal_set_message(t('@nodes nodes of type Equipment Updated.', array('@nodes' => $sandbox['total'])));
    }  
}

/**
 * Delete field_product_slideshow from Equipment type.
 */
function ak_mermix_tools_update_7012(&$sandbox) {
    $instances = field_info_instances('node', 'apartment');
        field_delete_instance($instances['field_product_slideshow'], true);
}

/**
 * Add the ak_mermix_tools_search_log table.
 */ 
function ak_mermix_tools_update_7013() {
  
  $schema = drupal_get_schema_unprocessed('ak_mermix_tools', 'ak_mermix_tools_search_log');
  db_create_table('ak_mermix_tools_search_log', $schema);

  return 'ak_mermix_tools_search_log table created.';
}